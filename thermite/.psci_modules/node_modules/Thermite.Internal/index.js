"use strict";
var Prelude = require("Prelude");

  function getStateImpl(ctx) {
    return function() {
      return ctx.state;
    };
  }
  ;

  function setStateImpl(ctx) {
    return function(state) {
      return function() {
        ctx.setState(state);
      };
    };
  }
  ;

  function textImpl(s) {
    return s;
  }
  ;

  function createElementImpl(name) {
    return function(ps) {
      return function(children) {
        var props = {};

        for (var i = 0; i < ps.length; i++) {
          var p = ps[i];
          props[p[0]] = p[1];
        }

        return React.createElement(name, props, children);
      };
    };
  }
  ;

  function unsafeAttribute(attr) {
    return function(value) {
      return [attr, value];
    };
  }
  ;

  function event(name) {
    return function(context) {
      return function(f) {
        return [name, function(e) {
          context.performAction(f(e));
        }];
      };
    };
  }
  ;

  function createClassImpl(runAction) {
    return function(maybe) {
      return function(spec) {
        return React.createClass({
          getInitialState: function() {
            return spec.initialState;
          },
          performAction: function(action) {
            runAction(this)(spec.performAction(this)(action))();
          },
          render: function() {
            return spec.render(this)(this.state)(this.props);
          },
          componentWillMount: function() {
            var self = this;
            maybe(function() { })(function(action) {
              return function() {
                self.performAction(action);
              };
            })(spec.componentWillMount)();
          },
          displayName: maybe(undefined)(function(a) { return a; })(spec.displayName)
        })
      };
    };
  }
  ;

  function renderImpl(component) {
    return function(props) {
      return function() {
        React.render(React.createElement(component, props), document.body);
      };
    };
  }
  ;
module.exports = {
    createClassImpl: createClassImpl, 
    createElementImpl: createElementImpl, 
    event: event, 
    getStateImpl: getStateImpl, 
    renderImpl: renderImpl, 
    setStateImpl: setStateImpl, 
    textImpl: textImpl, 
    unsafeAttribute: unsafeAttribute
};
