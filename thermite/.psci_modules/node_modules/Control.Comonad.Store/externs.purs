module Control.Comonad.Store where
import Data.Tuple ()
import Data.Identity ()
import Control.Comonad.Store.Trans ()
import Prim ()
import Prelude ()
import Control.Comonad.Store.Trans ()
import Data.Identity ()
import Data.Tuple ()
type Store (s :: *) (a :: *) = Control.Comonad.Store.Trans.StoreT s Data.Identity.Identity a
foreign import store :: forall s a. (s -> a) -> s -> Control.Comonad.Store.Store s a
foreign import runStore :: forall s a. Control.Comonad.Store.Store s a -> Data.Tuple.Tuple (s -> a) s
