module Data.Foreign.Undefined where
import Data.Foreign ()
import Prelude ()
import Prim ()
import Prelude ()
import Data.Maybe ()
import Data.Either ()
import Data.Foreign ()
newtype Undefined (a :: *) = Undefined (Data.Maybe.Maybe a)
foreign import readUndefined :: forall a. (Data.Foreign.Foreign -> Data.Foreign.F a) -> Data.Foreign.Foreign -> Data.Foreign.F (Data.Foreign.Undefined.Undefined a)
foreign import runUndefined :: forall a. Data.Foreign.Undefined.Undefined a -> Data.Maybe.Maybe a
