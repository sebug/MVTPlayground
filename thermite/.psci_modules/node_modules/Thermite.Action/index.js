"use strict";
var Prelude = require("Prelude");
var Thermite_Internal = require("Thermite.Internal");
var Control_Monad_Eff = require("Control.Monad.Eff");
function GetState(value0) {
    this.value0 = value0;
};
GetState.create = function (value0) {
    return new GetState(value0);
};
function SetState(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
SetState.create = function (value0) {
    return function (value1) {
        return new SetState(value0, value1);
    };
};
function Wait(value0) {
    this.value0 = value0;
};
Wait.create = function (value0) {
    return new Wait(value0);
};
function Pure(value0) {
    this.value0 = value0;
};
Pure.create = function (value0) {
    return new Pure(value0);
};
function Impure(value0) {
    this.value0 = value0;
};
Impure.create = function (value0) {
    return new Impure(value0);
};
var setState = function (s) {
    return Impure.create(new SetState(s, new Pure(Prelude.unit)));
};
var runAction = function (ctx) {
    var go = function (_332) {
        if (_332 instanceof Pure) {
            return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
        };
        if (_332 instanceof Impure && _332.value0 instanceof GetState) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                var _22 = Thermite_Internal.getStateImpl(ctx)();
                return go(_332.value0.value0(_22))();
            });
        };
        if (_332 instanceof Impure && _332.value0 instanceof SetState) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                Thermite_Internal.setStateImpl(ctx)(_332.value0.value0)();
                return go(_332.value0.value1)();
            });
        };
        if (_332 instanceof Impure && _332.value0 instanceof Wait) {
            return _332.value0.value0(go);
        };
        throw new Error("Failed pattern match");
    };
    return go;
};
var getState = Impure.create(new GetState(Pure.create));
var functorActionF = new Prelude.Functor(function (_330) {
    return function (_331) {
        if (_331 instanceof GetState) {
            return new GetState(Prelude["<<<"](Prelude.semigroupoidArr)(_330)(_331.value0));
        };
        if (_331 instanceof SetState) {
            return new SetState(_331.value0, _330(_331.value1));
        };
        if (_331 instanceof Wait) {
            return new Wait(function (k_1) {
                return _331.value0(Prelude["<<<"](Prelude.semigroupoidArr)(k_1)(_330));
            });
        };
        throw new Error("Failed pattern match");
    };
});
var functorAction = new Prelude.Functor(function (_333) {
    return function (_334) {
        if (_334 instanceof Pure) {
            return new Pure(_333(_334.value0));
        };
        if (_334 instanceof Impure) {
            return new Impure(Prelude["<$>"](functorActionF)(Prelude["<$>"](functorAction)(_333))(_334.value0));
        };
        throw new Error("Failed pattern match");
    };
});
var async = function (c) {
    return Impure.create(new Wait(function (k) {
        return c(Prelude["<<<"](Prelude.semigroupoidArr)(k)(Pure.create));
    }));
};
var sync = function (e) {
    return async(Prelude[">>="](Control_Monad_Eff.bindEff)(e));
};
var monadAction = new Prelude.Monad(function () {
    return applicativeAction;
}, function () {
    return bindAction;
});
var bindAction = new Prelude.Bind(function (_335) {
    return function (_336) {
        if (_335 instanceof Pure) {
            return _336(_335.value0);
        };
        if (_335 instanceof Impure) {
            return Impure.create(Prelude["<#>"](functorActionF)(_335.value0)(function (a_1) {
                return Prelude[">>="](bindAction)(a_1)(_336);
            }));
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return applyAction;
});
var applyAction = new Prelude.Apply(Prelude.ap(monadAction), function () {
    return functorAction;
});
var applicativeAction = new Prelude.Applicative(function () {
    return applyAction;
}, Pure.create);
var asyncSetState = function (c) {
    return Prelude[">>="](bindAction)(async(c))(function (_24) {
        return setState(_24);
    });
};
var modifyState = function (f) {
    return Prelude[">>="](bindAction)(getState)(function (_23) {
        return setState(f(_23));
    });
};
module.exports = {
    applicativeAction: applicativeAction, 
    applyAction: applyAction, 
    async: async, 
    asyncSetState: asyncSetState, 
    bindAction: bindAction, 
    functorAction: functorAction, 
    getState: getState, 
    modifyState: modifyState, 
    monadAction: monadAction, 
    runAction: runAction, 
    setState: setState, 
    sync: sync
};
