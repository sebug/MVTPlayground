-- Generated by psc-make version 0.6.2
module Thermite.Types where
import Prim ()
import Prelude ()
import Data.Maybe ()
type SpecRecord (m :: * -> *) (state :: *) (props :: *) (action :: *) = { displayName :: Data.Maybe.Maybe Prim.String, componentWillMount :: Data.Maybe.Maybe action, render :: Thermite.Types.Render state props action, performAction :: Thermite.Types.PerformAction props action m, initialState :: state }
newtype Spec (m :: * -> *) (state :: *) (props :: *) (action :: *) = Spec (Thermite.Types.SpecRecord m state props action)
type Render (state :: *) (props :: *) (action :: *) = Thermite.Types.Context state props action -> state -> props -> Thermite.Types.Html action
type PerformAction (props :: *) (action :: *) (m :: * -> *) = props -> action -> m Prelude.Unit
data Html (action :: *)
type Props (action :: *) = [Thermite.Types.Prop action]
data Prop (action :: *)
data ComponentClass (props :: *) (eff :: # !)
data Context (state :: *) (props :: *) (action :: *)
