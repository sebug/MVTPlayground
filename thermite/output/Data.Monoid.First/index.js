// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = {
    create: function (value) {
        return value;
    }
};
var showFirst = function (__dict_Show_0) {
    return new Prelude.Show(function (_178) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_178) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (_179) {
    return function (_180) {
        if (_179 instanceof Data_Maybe.Just) {
            return _179;
        };
        return _180;
    };
});
var runFirst = function (_171) {
    return _171;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var eqFirst = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_174) {
        return function (_175) {
            return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_2))(_174)(_175);
        };
    }, function (_172) {
        return function (_173) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_172)(_173);
        };
    });
};
var ordFirst = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqFirst(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_176) {
        return function (_177) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_176)(_177);
        };
    });
};
module.exports = {
    First: First, 
    eqFirst: eqFirst, 
    monoidFirst: monoidFirst, 
    ordFirst: ordFirst, 
    runFirst: runFirst, 
    semigroupFirst: semigroupFirst, 
    showFirst: showFirst
};
